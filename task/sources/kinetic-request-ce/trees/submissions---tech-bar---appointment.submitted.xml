<tree schema_version="1.0">
    <sourceName>Kinetic Request CE</sourceName>
    <sourceGroup>Submissions > tech-bar > appointment</sourceGroup>
    <type>Tree</type>
    <status>Active</status>
    <taskTree builder_version="" schema_version="1.0" version="">
        <name>Submitted</name>
        <author></author>
        <notes></notes>
        <lastID>48</lastID>
        <request>
            <task definition_id="system_start_v1" id="start" name="Start" x="10" y="10">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages></messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_datastore_submissions_retrieve_list_v1_36</task>
                </dependents>
            </task>
            <task definition_id="system_noop_v1" id="system_noop_v1_5" name="End" x="11" y="760">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="system_wait_v1" id="system_wait_v1_16" name="Reminder Wait" x="463" y="299">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="Time to wait" label="Wait time:" menu="" required="true" tooltip="Time you want to wait for deferred task">&lt;%=@results['Calc Reminder time']['output']%&gt;</parameter>
                    <parameter id="Time unit" label="Time unit:" menu="Second,Minute,Hour,Day,Week" required="true" tooltip="Unit of measurement for time (Seconds, Minutes, Hours, Days, Weeks)">Second</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_submission_retrieve_v1_48</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_17" name="Calc Reminder time" x="297" y="286">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=
scheduled_event_values = JSON.parse(@results['Retrieve Scheduled Event']['Values JSON'])
appt_time = Time.parse(scheduled_event_values['Timestamp'])

reminder_time = appt_time - (60 * 60)

#curr_time = Time.parse(@results['Get Date in Scheduler Timezone']['Current Time in Timezone (ignore offset)'])
curr_time = Time.now.utc

(reminder_time - curr_time).to_i
%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="&amp;lt; 1 hr" type="Complete" value="@results['Calc Reminder time']['output'].to_i &lt; 0">system_noop_v1_18</task>
                    <task label="&amp;gt;= 1 hr" type="Complete" value="@results['Calc Reminder time']['output'].to_i &gt;= 0">system_wait_v1_16</task>
                </dependents>
            </task>
            <task definition_id="system_noop_v1" id="system_noop_v1_18" name="No reminder" x="298" y="432">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="system_noop_v1" id="system_noop_v1_21" name="No reminder (Resched or Closed)" x="628" y="430">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="routine_kinetic_email_template_notification_send_v1" id="routine_kinetic_email_template_notification_send_v1_35" name="Send confirmation email" x="286" y="99">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Recipient List" label="Recipient List" menu="" required="true" tooltip="Comma separated list of recipients (Usernames, SMTP Addresses, and/or Team Names)">&lt;%= @values['Requested For']%&gt;</parameter>
                    <parameter id="Notification Template Name" label="Notification Template Name" menu="" required="true" tooltip="Name of the notification template to use when sending this email">Tech Bar Appointment Created</parameter>
                    <parameter id="JSON Variables" label="JSON Variables" menu="" required="false" tooltip="JSON input of miscellaneous values.  These values are used to replace placeholder content in notification messages.">&lt;%=
start_time = Time.parse(JSON.parse(@results['Retrieve Scheduled Event']['Values JSON'])['Timestamp'])
end_time = start_time + (@values['Event Duration'].to_i * 60)
location = ""
uri_location = ""
scheduler_values = JSON.parse( @results['Retrieve Scheduler']['Submissions List JSON'] )[0]['values']
if !( scheduler_values['Location'] ).nil?
  location = scheduler_values['Location'].gsub("\n"," ")
  uri_location = URI.escape( scheduler_values['Location'].gsub("\n"," ") )
end

{
  "Tech Bar Name" =&gt; scheduler_values['Name'],
  "Encoded Tech Bar Name" =&gt; URI.escape( scheduler_values['Name'] ),
  "Tech Bar Location" =&gt; location,
  "Encoded Tech Bar Location" =&gt; uri_location,
  "Start Date Timestamp iso8601" =&gt; start_time.strftime("%Y%m%dT%H%M%SZ"),
  "End Date Timestamp iso8601" =&gt; end_time.strftime("%Y%m%dT%H%M%SZ"),
  "Encoded Details" =&gt; URI.escape("Summary: #{@values['Summary']}\nDetails: #{@values['Details']}")
}.to_json
%&gt;</parameter>
                    <parameter id="Kapp Slug Initiating Notification" label="Kapp Slug Initiating Notification" menu="" required="true" tooltip="The slug of the Kapp sending the notification (ex: services, queue, etc.)">&lt;%= @kapp['Slug']%&gt;</parameter>
                    <parameter id="Related Submission Id" label="Related Submission Id" menu="" required="false" tooltip="Id of the submission to get values for, required if using those or attachments in the message">&lt;%= @submission['Id']%&gt;</parameter>
                    <parameter id="Form Slug Initiating Notification" label="Form Slug Initiating Notification" menu="" required="false" tooltip="The slug of the Form sending the notification (ex: work-order, cleaning, etc.)">&lt;%= @form['Slug']%&gt;</parameter>
                    <parameter id="Is Datastore" label="Is Datastore" menu="" required="false" tooltip="If the Related Submission Id, or Form Slug is a datastore form.">false</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="routine_kinetic_datastore_submissions_retrieve_list_v1" id="routine_kinetic_datastore_submissions_retrieve_list_v1_36" name="Retrieve Scheduler" x="129" y="55">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Form Slug" label="Form Slug" menu="" required="false" tooltip="The slug of the Form to find submissions in.">scheduler</parameter>
                    <parameter id="Index To Search" label="Index To Search" menu="" required="false" tooltip="The Index definition to search (i.e. values[Name],values[Status])">values[Id]</parameter>
                    <parameter id="Core State" label="Core State" menu="" required="false" tooltip="Searches for submissions that have a core state that matches this parameter. If no value is provided, the results will contain submissions in all core states."></parameter>
                    <parameter id="Limit" label="Limit" menu="" required="false" tooltip="Limit the number of results returned. If not provided, the server will limit the results to 25 submissions. Maximum limit 1000"></parameter>
                    <parameter id="Query" label="Query" menu="" required="false" tooltip="Query to use to fetch submissions. (i.e values[First Name]=&quot;Fred&quot;)">values[Id]="&lt;%= @values['Scheduler Id']%&gt;"</parameter>
                    <parameter id="Next Page Token" label="Next Page Token" menu="" required="false" tooltip="The value to use as the offset for the page of submissions to return. The submission that matches this value will not be included in the results."></parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_datastore_submission_retrieve_v1_37</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_datastore_submission_retrieve_v1" id="routine_kinetic_datastore_submission_retrieve_v1_37" name="Retrieve Scheduled Event" x="132" y="154">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Id" label="Id" menu="" required="true" tooltip="The Id of the submission to retrieve">&lt;%= @values['Scheduled Event Id']%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_email_template_notification_send_v1_35</task>
                    <task label="" type="Complete" value="">utilities_echo_v1_17</task>
                    <task label="" type="Complete" value="">utility_date_in_timezone_v2_47</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_email_template_notification_send_v1" id="routine_kinetic_email_template_notification_send_v1_39" name="Send reminder email" x="819" y="286">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Recipient List" label="Recipient List" menu="" required="true" tooltip="Comma separated list of recipients (Usernames, SMTP Addresses, and/or Team Names)">&lt;%= @values['Requested For']%&gt;</parameter>
                    <parameter id="Notification Template Name" label="Notification Template Name" menu="" required="true" tooltip="Name of the notification template to use when sending this email">Tech Bar Appointment Reminder</parameter>
                    <parameter id="JSON Variables" label="JSON Variables" menu="" required="false" tooltip="JSON input of miscellaneous values.  These values are used to replace placeholder content in notification messages.">&lt;%=

start_time = Time.parse(JSON.parse(@results['Retrieve Scheduled Event']['Values JSON'])['Timestamp'])
end_time = start_time + (@values['Event Duration'].to_i * 60)
location = ""
uri_location = ""
scheduler_values = JSON.parse( @results['Retrieve Scheduler']['Submissions List JSON'] )[0]['values']
if !( scheduler_values['Location'] ).nil?
  location = scheduler_values['Location'].gsub("\n"," ")
  uri_location = URI.escape( scheduler_values['Location'].gsub("\n"," ") )
end

{
  "Tech Bar Name" =&gt; scheduler_values['Name'],
  "Encoded Tech Bar Name" =&gt; URI.escape( scheduler_values['Name'] ),
  "Tech Bar Location" =&gt; location,
  "Encoded Tech Bar Location" =&gt; uri_location,
  "Start Date Timestamp iso8601" =&gt; start_time.strftime("%Y%m%dT%H%M%SZ"),
  "End Date Timestamp iso8601" =&gt; end_time.strftime("%Y%m%dT%H%M%SZ"),
  "Encoded Details" =&gt; URI.escape("Summary: #{@values['Summary']}\nDetails: #{@values['Details']}")
}.to_json
%&gt;</parameter>
                    <parameter id="Kapp Slug Initiating Notification" label="Kapp Slug Initiating Notification" menu="" required="true" tooltip="The slug of the Kapp sending the notification (ex: services, queue, etc.)">&lt;%= @kapp['Slug']%&gt;</parameter>
                    <parameter id="Related Submission Id" label="Related Submission Id" menu="" required="false" tooltip="Id of the submission to get values for, required if using those or attachments in the message">&lt;%= @submission['Id']%&gt;</parameter>
                    <parameter id="Form Slug Initiating Notification" label="Form Slug Initiating Notification" menu="" required="false" tooltip="The slug of the Form sending the notification (ex: work-order, cleaning, etc.)">&lt;%= @form['Slug']%&gt;</parameter>
                    <parameter id="Is Datastore" label="Is Datastore" menu="" required="false" tooltip="If the Related Submission Id, or Form Slug is a datastore form.">false</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="routine_kinetic_queue_task_create_v1" id="routine_kinetic_queue_task_create_v1_40" name="Create Task Tech Bar" x="134" y="406">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Kapp Slug" label="Kapp Slug" menu="" required="true" tooltip="Slug of the Queue Kapp">queue</parameter>
                    <parameter id="Task Form Slug" label="Task Form Slug" menu="" required="true" tooltip="Slug of the form the task is created for">tech-bar-work-order</parameter>
                    <parameter id="Summary" label="Summary" menu="" required="true" tooltip="A summary of what is to be worked on ">&lt;%= @values['Requested For Display Name']%&gt;: &lt;%= @values['Summary']%&gt;</parameter>
                    <parameter id="Details" label="Details" menu="" required="true" tooltip="A description of what is to be worked on ">User:     &lt;%= @values['Requested For Display Name']%&gt;
Type:     &lt;%= @values['Event Type']%&gt;
Date:     &lt;%= @values['Event Date']%&gt;
Time:     &lt;%= @values['Event Time']%&gt;
Summary:  &lt;%= @values['Summary']%&gt;
Details:  &lt;%= @values['Details']%&gt;</parameter>
                    <parameter id="Days Due" label="Days Due" menu="" required="true" tooltip="Number of days from now the task is to be completed by">&lt;%=
scheduled_event = JSON.parse( @results['Retrieve Scheduled Event']['Values JSON'] )
Time.parse(scheduled_event['Timestamp']).iso8601
%&gt;</parameter>
                    <parameter id="Assignee Team" label="Assignee Team" menu="" required="true" tooltip="Name of the team to assign work to (ex. &quot;Test::Test::Test&quot;)">Scheduler::&lt;%=JSON.parse(@results['Retrieve Scheduler']['Submissions List JSON'])[0]['values']['Name']%&gt;</parameter>
                    <parameter id="Assignee Id" label="Assignee Id" menu="" required="false" tooltip="Id of the person the task will be assigned to"></parameter>
                    <parameter id="Originating System" label="Originating System" menu="" required="true" tooltip="Source of the parent record (e.g. Kinetic Core, Salesforce ..etc)">Kinetic Core</parameter>
                    <parameter id="Originating Id" label="Originating Id" menu="" required="true" tooltip="Id of the originating systems record">&lt;%= @submission['Id']%&gt;</parameter>
                    <parameter id="System Input" label="System Input" menu="" required="false" tooltip="Structured data that can be leveraged by the queue task form">&lt;%=
status = "Open"

current_date = Date.parse(@results['Get Date in Scheduler Timezone']['Date'])
event_date = Date.parse(@values['Event Date'])

if event_date &gt; current_date
  status = "Future"
end

system_input = {
  "Customer" =&gt; "#{@values['Requested For Display Name']} (#{@values['Requested For']})",
  "Request Summary" =&gt; @values['Summary'],
  "Request Details" =&gt; @values['Details'],
  "Observing Teams" =&gt; "[\"Role::Tech Bar Observers\"]",
  "Requested For" =&gt; @values['Requested For'],
  "Type" =&gt; @values['Event Type'],
  "Event Date" =&gt; @values['Event Date'],
  "Event Time" =&gt; @values['Event Time'],
  "Status" =&gt; status
}

scheduled_event = JSON.parse( @results['Retrieve Scheduled Event']['Values JSON'] )
system_input['Scheduled At'] = Time.parse(scheduled_event['Timestamp']).iso8601
system_input['Due Date'] = Time.parse(scheduled_event['Timestamp']).iso8601

system_input['Pending Reason'] = "Future Appointment" if status == "Future"

system_input.to_json
%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_submission_retrieve_v1_41</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_submission_retrieve_v1" id="routine_kinetic_submission_retrieve_v1_41" name="Get Queue Submission" x="132" y="504">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Id" label="Id" menu="" required="true" tooltip="The Id of the submission to retrieve">&lt;%=@results['Create Task Tech Bar']['Task Submission Id']%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_submission_retrieve_v1_42</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_submission_retrieve_v1" id="routine_kinetic_submission_retrieve_v1_42" name="Get Current Submission Values" x="131" y="595">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Id" label="Id" menu="" required="true" tooltip="The Id of the submission to retrieve">&lt;%= @submission['Id']%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_submission_update_v1_43</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_submission_update_v1" id="routine_kinetic_submission_update_v1_43" name="Close" x="132" y="705">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Id" label="Id" menu="" required="true" tooltip="The id of the submission to update">&lt;%= @submission['Id']%&gt;</parameter>
                    <parameter id="Updated - Core State" label="Updated - Core State" menu="" required="false" tooltip="The submissions core state">Closed</parameter>
                    <parameter id="Updated - Current Page Name" label="Updated - Current Page Name" menu="" required="false" tooltip="The page to set the submission to"></parameter>
                    <parameter id="Updated - Current Page Navigation" label="Updated - Current Page Navigation" menu="" required="false" tooltip="The direction of the next page (next or previous)"></parameter>
                    <parameter id="Updated - Origin Id" label="Updated - Origin Id" menu="" required="false" tooltip="The Id of the submissions origin"></parameter>
                    <parameter id="Updated - Parent Id" label="Updated - Parent Id" menu="" required="false" tooltip="The Id of the submissions parent"></parameter>
                    <parameter id="Updated - Values JSON" label="Updated - Values JSON" menu="" required="false" tooltip="A JSON representation of the submissions values">&lt;%=
status = "Completed"

return_values = JSON.parse( @results['Create Task Tech Bar']['Fields JSON'] || "{}" )

if return_values.has_key?('Status') &amp;&amp; !return_values['Status'].nil?
 status = return_values['Status'];
end

#Work Order uses "Complete", this service should be "Completed"
status = "Completed" if status == "Complete"

# Calculate Event Duration Actual
queue_fields = JSON.parse(@results['Create Task Tech Bar']['Fields JSON'])
queue_closed_at = @results['Get Queue Submission']['Closed At']
queue_work_started = queue_fields['Work Started At']
duration_in_minutes = nil
if !queue_closed_at.nil? &amp;&amp; !queue_closed_at.empty? &amp;&amp; !queue_work_started.nil?
  duration_in_minutes = ((Time.parse(queue_closed_at) - Time.parse(queue_work_started))/60).round
end

# Calculate Wait Time
check_in_or_scheduled_time = JSON.parse(@results['Get Current Submission Values']['Values JSON'])['Check-in Time'] || queue_fields['Scheduled At']
wait_in_minutes = nil
if !check_in_or_scheduled_time.nil? &amp;&amp; !check_in_or_scheduled_time.empty? &amp;&amp; !queue_work_started.nil?
  wait_in_minutes = ((Time.parse(queue_work_started) - Time.parse(check_in_or_scheduled_time))/60).round
  wait_in_minutes = 0 if wait_in_minutes &lt; 0
end

values = {
  "Status" =&gt; status,
  "Event Duration Actual" =&gt; duration_in_minutes,
  "Start Work Time" =&gt; queue_fields['Work Started At'],
  "Wait Time" =&gt; wait_in_minutes
}.to_json
%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">system_noop_v1_5</task>
                    <task label="" type="Complete" value="">routine_kinetic_submissions_retrieve_list_v1_45</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_submissions_retrieve_list_v1" id="routine_kinetic_submissions_retrieve_list_v1_45" name="Check for Metrics" x="315" y="693">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Kapp Slug" label="Kapp Slug" menu="" required="true" tooltip="The slug of the Kapp to find submissions in.">tech-bar</parameter>
                    <parameter id="Form Slug" label="Form Slug" menu="" required="false" tooltip="The slug of the Form to find submissions in. If none provided, can only use Kapp Fields in search query">tech-bar-metrics</parameter>
                    <parameter id="Form Type" label="Form Type" menu="" required="false" tooltip="The Type of Form to find submissions in."></parameter>
                    <parameter id="Core State" label="Core State" menu="" required="false" tooltip="Searches for submissions that have a core state that matches this parameter. If no value is provided, the results will contain submissions in all core states."></parameter>
                    <parameter id="Limit" label="Limit" menu="" required="false" tooltip="Limit the number of results returned. If not provided, the server will limit the results to 25 submissions. Maximum limit 1000"></parameter>
                    <parameter id="Query" label="Query" menu="" required="false" tooltip="Query to use to fetch submissions. (i.e values[First Name]=&quot;Fred&quot;)">values[Period]="&lt;%=JSON.parse( @results['Get Current Submission Values']['Values JSON'] )['Event Date']%&gt;" AND values[Scheduler Id] = "&lt;%=JSON.parse( @results['Get Current Submission Values']['Values JSON'] )['Scheduler Id']%&gt;" AND values[Refresh Data] = "No"</parameter>
                    <parameter id="Timeline" label="Timeline" menu="" required="false" tooltip="Date property to search by. The default value is createdAt."></parameter>
                    <parameter id="Direction" label="Direction" menu="" required="false" tooltip="Result Set sorting direction. The default value is descending."></parameter>
                    <parameter id="Start Date/Time" label="Start Date/Time" menu="" required="false" tooltip="Start date/time of the timeline. This value should be used to both refine and limit the search results. Format should be yyyy-MM-dd'T'HH:mm:ss'Z'"></parameter>
                    <parameter id="End Date/Time" label="End Date/Time" menu="" required="false" tooltip="End date/time of the timeline. This value should be used to both refine and limit the search results. Formatshould be yyyy-MM-dd'T'HH:mm:ss'Z'"></parameter>
                    <parameter id="Next Page Token" label="Next Page Token" menu="" required="false" tooltip="The value to use as the offset for the page of submissions to return. The submission that matches this value will not be included in the results."></parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="Has Metrics" type="Complete" value="@results['Check for Metrics']['Count'].to_i &gt; 0">routine_kinetic_submission_update_v1_46</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_submission_update_v1" id="routine_kinetic_submission_update_v1_46" name="Trigger Metrics Update" x="493" y="684">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Id" label="Id" menu="" required="true" tooltip="The id of the submission to update">&lt;%=JSON( @results['Check for Metrics']['Submissions List JSON'] )[0]['id']%&gt;</parameter>
                    <parameter id="Updated - Core State" label="Updated - Core State" menu="" required="false" tooltip="The submissions core state"></parameter>
                    <parameter id="Updated - Current Page Name" label="Updated - Current Page Name" menu="" required="false" tooltip="The page to set the submission to"></parameter>
                    <parameter id="Updated - Current Page Navigation" label="Updated - Current Page Navigation" menu="" required="false" tooltip="The direction of the next page (next or previous)"></parameter>
                    <parameter id="Updated - Origin Id" label="Updated - Origin Id" menu="" required="false" tooltip="The Id of the submissions origin"></parameter>
                    <parameter id="Updated - Parent Id" label="Updated - Parent Id" menu="" required="false" tooltip="The Id of the submissions parent"></parameter>
                    <parameter id="Updated - Values JSON" label="Updated - Values JSON" menu="" required="false" tooltip="A JSON representation of the submissions values">&lt;%=
{
  "Refresh Data" =&gt; "Yes"
}.to_json
%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="utility_date_in_timezone_v2" id="utility_date_in_timezone_v2_47" name="Get Date in Scheduler Timezone" x="133" y="286">
                <version>2</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="timezone" label="Timezone" menu="" required="true" tooltip="The timezone being explored.">&lt;%=
timezone = "UTC"
scheduler_values = JSON.parse( @results['Retrieve Scheduler']['Submissions List JSON'] )[0]['values']

if !scheduler_values['Timezone'].nil?
  timezone = scheduler_values['Timezone']
end

timezone
%&gt;</parameter>
                    <parameter id="timestamp" label="Timestamp" menu="" required="false" tooltip="Current time will be used if a timestamp is not entered. Format: YYYY-MM-DD'T'HH:MM:SS'Z' (iso8601)"></parameter>
                    <parameter id="direction" label="Direction" menu="To Local,To UTC" required="true" tooltip="Convert from UTC to local time, or a local time to a UTC.">To Local</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_queue_task_create_v1_40</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_submission_retrieve_v1" id="routine_kinetic_submission_retrieve_v1_48" name="Retrieve Appt" x="630" y="294">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Id" label="Id" menu="" required="true" tooltip="The Id of the submission to retrieve">&lt;%= @submission['Id']%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="Resch or Closed" type="Complete" value="appt_values = JSON.parse(@results['Retrieve Appt']['Values JSON'])&#10;&#10;#if (appt_values['Event Date'] != @values['Event Date']) || (appt_values['Event Time'] != @values['Event Time']) || (@results['Retrieve Appt']['Core State'] == #&quot;Closed&quot;)&#10;#  &quot;true&quot;&#10;#else&#10;#  &quot;false&quot;&#10;#end&#10;&#10;(appt_values['Event Date'] != @values['Event Date']) || (appt_values['Event Time'] != @values['Event Time']) || (@results['Retrieve Appt']['Core State'] == &quot;Closed&quot;)">system_noop_v1_21</task>
                    <task label="Not Resched and Open" type="Complete" value="appt_values = JSON.parse(@results['Retrieve Appt']['Values JSON'])&#10;&#10;#&#10;#if (appt_values['Event Date'] == @values['Event Date'] &amp;&amp; appt_values['Event Time'] == @values['Event Time']) &amp;&amp; (@results['Retrieve Appt']['Core State'] != &quot;Closed&quot;)&#10;#  &quot;true&quot;&#10;#else&#10;#  &quot;false&quot;&#10;#end&#10;&#10;(appt_values['Event Date'] == @values['Event Date'] &amp;&amp; appt_values['Event Time'] == @values['Event Time']) &amp;&amp; (@results['Retrieve Appt']['Core State'] != &quot;Closed&quot;)">routine_kinetic_email_template_notification_send_v1_39</task>
                </dependents>
            </task>
        </request>
    </taskTree>
</tree>